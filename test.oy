set! quoted: '((... 'args) args)

set! list: '((... args) args)

set! unary-\:
    quoted:
        ('args)
        oif (atom-p args):
            set! args: cons args ()
        quoted:
            (... 'code)
            list args @code

#--------------------------------------------------------------#
print: quoted Cons car cdr and fn tests.

print: car: cons 't ()

print: car: 
    (\b: cons 't (cons b ())) 'a

print: car: cdr:
    ((\b: \a: a <<cons>> b <<cons>> ()) 't) 'b


#--------------------------------------------------------------#
print: quoted Scope and leaking tests.

print: set! a 't

print: a
print: (\('b) b) t
print: (\('b) b): really a

set! b 'b
print: (\b b) 't

print: *((\a: leak a 'a) 'b <<cons>> ())

#--------------------------------------------------------------#
print: quoted oif tests.

print: oif 'a 't 'a
print: oif () 'a 't

#--------------------------------------------------------------#
print: quoted Elipsis argument tests

# This one still fails, because of the faulty way elipsis args
# are currently handled. Needed to be fixed for the sake of continuations,
# anyway. 
#print: car: (\(... 'b) b) t e a q
