set! quoted: '((... 'args) args)

set! list: '((... args) args)

set! unary-\:
    quoted:
        ('args)
        oif (atom-p args):
            set! args: list args
        quoted:
            (... 'code)
            list args @code

#--------------------------------------------------------------#
print: quoted Cons car cdr and fn tests.

print: car: 't <<cons>> ()

print: car: 
    (\b: 't <<cons>> b <<cons>> ()) 'a

print: car: cdr:
    ((\b: \a: a <<cons>> b <<cons>> ()) 't) 'b


#--------------------------------------------------------------#
print: quoted Scope and leaking tests.

print: set! a 't

print: a
print: (\('b) b) t
print: (\('b) b): really a

set! b 'b
print: (\b b) 't

print: *((\a: leak a 'a) 'b <<cons>> ())

#--------------------------------------------------------------#
print: quoted oif tests.

print: oif 'a 't 'a
print: oif () 'a 't

#--------------------------------------------------------------#
print: quoted Elipsis argument tests.

print: car: (\(... 'b) b) t e a q
print: car: car: (\(... 'b) b): really: 't <<cons>> 'a <<cons>> ()

#--------------------------------------------------------------#
print: quoted Signal handling tests.

print: with-signal-handler:
    \x: car x
    signal 't
